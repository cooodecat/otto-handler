/**
 * @packageDocumentation
 * @module api.functional.webhook.github
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { GitHubWebhookPayload } from "../../../structures/GitHubWebhookPayload";

/**
 * @tag github-webhook
 * @internal
 * @summary GitHub App 웹훅 이벤트 수신
 * @description GitHub App에서 자동으로 전송되는 웹훅 이벤트를 처리합니다
 * @controller GithubWebhookController.handleGitHubWebhook
 * @path POST /webhook/github
 * @accessor api.functional.webhook.github.handleGitHubWebhook
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function handleGitHubWebhook(
  connection: IConnection,
  payload: handleGitHubWebhook.Body,
): Promise<handleGitHubWebhook.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...handleGitHubWebhook.METADATA,
      template: handleGitHubWebhook.METADATA.path,
      path: handleGitHubWebhook.path(),
    },
    payload,
  );
}
export namespace handleGitHubWebhook {
  export type Body = GitHubWebhookPayload;
  export type Output = {
    message: string;
  };

  export const METADATA = {
    method: "POST",
    path: "/webhook/github",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/webhook/github";
}
