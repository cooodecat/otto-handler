/**
 * @packageDocumentation
 * @module api.functional.github_app.projects.branches
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { GithubBranchResponseDto } from "../../../../structures/GithubBranchResponseDto";

/**
 * @tag github-app
 * @summary 프로젝트의 브랜치 목록 조회
 * @throws 401 인증 실패
 * @throws 404 Project를 찾을 수 없음
 * @controller GithubAppController.getProjectBranches
 * @path GET /github-app/projects/:projectId/branches
 * @accessor api.functional.github_app.projects.branches.getProjectBranches
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getProjectBranches(
  connection: IConnection,
  projectId: string,
): Promise<getProjectBranches.Output> {
  return PlainFetcher.fetch(connection, {
    ...getProjectBranches.METADATA,
    template: getProjectBranches.METADATA.path,
    path: getProjectBranches.path(projectId),
  });
}
export namespace getProjectBranches {
  export type Output = GithubBranchResponseDto[];

  export const METADATA = {
    method: "GET",
    path: "/github-app/projects/:projectId/branches",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (projectId: string) =>
    `/github-app/projects/${encodeURIComponent(projectId?.toString() ?? "null")}/branches`;
}
