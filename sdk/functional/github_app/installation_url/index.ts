/**
 * @packageDocumentation
 * @module api.functional.github_app.installation_url
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { GithubInstallationUrlResponseDto } from "../../../structures/GithubInstallationUrlResponseDto";

/**
 * @tag github-app
 * @summary GitHub App 설치 URL 생성
 * @throws 401 인증 실패
 * @controller GithubAppController.getInstallationUrl
 * @path GET /github-app/installation-url
 * @accessor api.functional.github_app.installation_url.getInstallationUrl
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getInstallationUrl(
  connection: IConnection,
): Promise<getInstallationUrl.Output> {
  return PlainFetcher.fetch(connection, {
    ...getInstallationUrl.METADATA,
    template: getInstallationUrl.METADATA.path,
    path: getInstallationUrl.path(),
  });
}
export namespace getInstallationUrl {
  export type Output = GithubInstallationUrlResponseDto;

  export const METADATA = {
    method: "GET",
    path: "/github-app/installation-url",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/github-app/installation-url";
}
