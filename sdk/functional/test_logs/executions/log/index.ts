/**
 * @packageDocumentation
 * @module api.functional.test_logs.executions.log
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { TestLogDto } from "../../../../structures/TestLogDto";

/**
 * @controller TestLogsController.sendTestLog
 * @path POST /test-logs/executions/:id/log
 * @accessor api.functional.test_logs.executions.log.sendTestLog
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function sendTestLog(
  connection: IConnection,
  executionId: string,
  dto: sendTestLog.Body,
): Promise<sendTestLog.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...sendTestLog.METADATA,
      template: sendTestLog.METADATA.path,
      path: sendTestLog.path(executionId),
    },
    dto,
  );
}
export namespace sendTestLog {
  export type Body = TestLogDto;
  export type Output = any;

  export const METADATA = {
    method: "POST",
    path: "/test-logs/executions/:id/log",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = (executionId: string) =>
    `/test-logs/executions/${encodeURIComponent(executionId?.toString() ?? "null")}/log`;
}
