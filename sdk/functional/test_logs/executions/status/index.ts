/**
 * @packageDocumentation
 * @module api.functional.test_logs.executions.status
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller TestLogsController.updateStatus
 * @path POST /test-logs/executions/:id/status
 * @accessor api.functional.test_logs.executions.status.updateStatus
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateStatus(
  connection: IConnection,
  executionId: string,
  dto: updateStatus.Body,
): Promise<updateStatus.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...updateStatus.METADATA,
      template: updateStatus.METADATA.path,
      path: updateStatus.path(executionId),
    },
    dto,
  );
}
export namespace updateStatus {
  export type Body = {
    status: string;
  };
  export type Output = any;

  export const METADATA = {
    method: "POST",
    path: "/test-logs/executions/:id/status",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = (executionId: string) =>
    `/test-logs/executions/${encodeURIComponent(executionId?.toString() ?? "null")}/status`;
}
