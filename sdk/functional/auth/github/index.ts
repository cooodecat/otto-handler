/**
 * @packageDocumentation
 * @module api.functional.auth.github
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { GithubAuthRequestDto } from "../../../structures/GithubAuthRequestDto";
import type { LoginResponseDto } from "../../../structures/LoginResponseDto";

/**
 * @tag auth
 * @summary GitHub OAuth 로그인
 * @throws 401 GitHub 인증 실패
 * @controller AuthController.authGithubSignIn
 * @path POST /auth/github
 * @accessor api.functional.auth.github.authGithubSignIn
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function authGithubSignIn(
  connection: IConnection,
  body: authGithubSignIn.Body,
): Promise<authGithubSignIn.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...authGithubSignIn.METADATA,
      template: authGithubSignIn.METADATA.path,
      path: authGithubSignIn.path(),
    },
    body,
  );
}
export namespace authGithubSignIn {
  export type Body = GithubAuthRequestDto;
  export type Output = LoginResponseDto;

  export const METADATA = {
    method: "POST",
    path: "/auth/github",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/auth/github";
}
