/**
 * @packageDocumentation
 * @module api.functional.pipelines.projects.count
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @tag pipeline
 * @summary 프로젝트별 파이프라인 개수 조회
 * @throws 401 인증 실패
 * @controller PipelineController.getPipelineCountByProject
 * @path GET /pipelines/projects/:projectId/count
 * @accessor api.functional.pipelines.projects.count.getPipelineCountByProject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getPipelineCountByProject(
  connection: IConnection,
  projectId: string,
): Promise<getPipelineCountByProject.Output> {
  return PlainFetcher.fetch(connection, {
    ...getPipelineCountByProject.METADATA,
    template: getPipelineCountByProject.METADATA.path,
    path: getPipelineCountByProject.path(projectId),
  });
}
export namespace getPipelineCountByProject {
  export type Output = {
    count: number;
  };

  export const METADATA = {
    method: "GET",
    path: "/pipelines/projects/:projectId/count",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (projectId: string) =>
    `/pipelines/projects/${encodeURIComponent(projectId?.toString() ?? "null")}/count`;
}
