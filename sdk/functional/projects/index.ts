/**
 * @packageDocumentation
 * @module api.functional.projects
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { CommonMessageResponseDto } from "../../structures/CommonMessageResponseDto";
import type { CreateProjectRequestDto } from "../../structures/CreateProjectRequestDto";
import type { ProjectResponseDto } from "../../structures/ProjectResponseDto";
import type { UpdateProjectRequestDto } from "../../structures/UpdateProjectRequestDto";

/**
 * @tag projects
 * @summary 프로젝트 생성
 * @throws 400 잘못된 요청 데이터
 * @throws 401 인증 실패
 * @controller ProjectController.createProject
 * @path POST /projects
 * @accessor api.functional.projects.createProject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function createProject(
  connection: IConnection,
  body: createProject.Body,
): Promise<createProject.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...createProject.METADATA,
      template: createProject.METADATA.path,
      path: createProject.path(),
    },
    body,
  );
}
export namespace createProject {
  export type Body = CreateProjectRequestDto;
  export type Output = ProjectResponseDto;

  export const METADATA = {
    method: "POST",
    path: "/projects",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/projects";
}

/**
 * @tag projects
 * @summary 사용자 프로젝트 목록 조회
 * @throws 401 인증 실패
 * @controller ProjectController.getProjects
 * @path GET /projects
 * @accessor api.functional.projects.getProjects
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getProjects(
  connection: IConnection,
): Promise<getProjects.Output> {
  return PlainFetcher.fetch(connection, {
    ...getProjects.METADATA,
    template: getProjects.METADATA.path,
    path: getProjects.path(),
  });
}
export namespace getProjects {
  export type Output = ProjectResponseDto[];

  export const METADATA = {
    method: "GET",
    path: "/projects",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/projects";
}

/**
 * @tag projects
 * @summary 프로젝트 상세 조회
 * @throws 401 인증 실패
 * @throws 404 프로젝트를 찾을 수 없음
 * @controller ProjectController.getProject
 * @path GET /projects/:projectId
 * @accessor api.functional.projects.getProject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getProject(
  connection: IConnection,
  projectId: string,
): Promise<getProject.Output> {
  return PlainFetcher.fetch(connection, {
    ...getProject.METADATA,
    template: getProject.METADATA.path,
    path: getProject.path(projectId),
  });
}
export namespace getProject {
  export type Output = ProjectResponseDto;

  export const METADATA = {
    method: "GET",
    path: "/projects/:projectId",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (projectId: string) =>
    `/projects/${encodeURIComponent(projectId?.toString() ?? "null")}`;
}

/**
 * @tag projects
 * @summary 프로젝트 수정
 * @throws 401 인증 실패
 * @throws 404 프로젝트를 찾을 수 없음
 * @controller ProjectController.updateProject
 * @path PATCH /projects/:projectId
 * @accessor api.functional.projects.updateProject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateProject(
  connection: IConnection,
  projectId: string,
  body: updateProject.Body,
): Promise<updateProject.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...updateProject.METADATA,
      template: updateProject.METADATA.path,
      path: updateProject.path(projectId),
    },
    body,
  );
}
export namespace updateProject {
  export type Body = UpdateProjectRequestDto;
  export type Output = ProjectResponseDto;

  export const METADATA = {
    method: "PATCH",
    path: "/projects/:projectId",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (projectId: string) =>
    `/projects/${encodeURIComponent(projectId?.toString() ?? "null")}`;
}

/**
 * @tag projects
 * @summary 프로젝트 삭제
 * @throws 401 인증 실패
 * @throws 404 프로젝트를 찾을 수 없음
 * @controller ProjectController.deleteProject
 * @path DELETE /projects/:projectId
 * @accessor api.functional.projects.deleteProject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function deleteProject(
  connection: IConnection,
  projectId: string,
): Promise<deleteProject.Output> {
  return PlainFetcher.fetch(connection, {
    ...deleteProject.METADATA,
    template: deleteProject.METADATA.path,
    path: deleteProject.path(projectId),
  });
}
export namespace deleteProject {
  export type Output = CommonMessageResponseDto;

  export const METADATA = {
    method: "DELETE",
    path: "/projects/:projectId",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (projectId: string) =>
    `/projects/${encodeURIComponent(projectId?.toString() ?? "null")}`;
}
